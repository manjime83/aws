AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ProjectName:
    Type: String
  EnvType:
    Type: String
  Domain:
    Type: String
  OperatorsGroup:
    Type: String
  SSLCertificate:
    Type: String

Conditions:
  IsProd: !Equals [!Ref EnvType, prod]

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join [".", [app, !Ref Domain]]
      PublicAccessBlockConfiguration: !If
        - IsProd
        - BlockPublicAcls: true
          IgnorePublicAcls: true
          BlockPublicPolicy: true
          RestrictPublicBuckets: true
        - !Ref "AWS::NoValue"
      WebsiteConfiguration: !If
        - IsProd
        - !Ref "AWS::NoValue"
        - IndexDocument: index.html
          ErrorDocument: index.html

  SyncWebsiteBucketPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join ["-", [!Ref ProjectName, bucket, sync]]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - s3:ListBucket
              - s3:PutObject
              - s3:DeleteObject
            Resource:
              - !Join ["", ["arn:aws:s3:::", !Ref WebsiteBucket]]
              - !Join ["", ["arn:aws:s3:::", !Ref WebsiteBucket, "/*"]]
      Groups:
        - !Ref OperatorsGroup

  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Condition: IsProd
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Join [" ", ["CloudFront OAI for", !Ref WebsiteBucket]]

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Principal: !If
              - IsProd
              - CanonicalUser: !GetAtt OriginAccessIdentity.S3CanonicalUserId
              - AWS: "*"
            Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              - !Join ["", ["arn:aws:s3:::", !Ref WebsiteBucket, "/*"]]

  CDN:
    Type: AWS::CloudFront::Distribution
    Condition: IsProd
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Join [".", [!Ref WebsiteBucket, "s3.amazonaws.com"]]
            Id: !Join [".", ["s3", "origin"]]
            S3OriginConfig:
              OriginAccessIdentity: !Join ["/", ["origin-access-identity", "cloudfront", !Ref OriginAccessIdentity]]
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: false
          TargetOriginId: !Join [".", ["s3", "origin"]]
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        Aliases:
          - !Ref WebsiteBucket
        ViewerCertificate:
          AcmCertificateArn: !Ref SSLCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.1_2016
        DefaultRootObject: index.html
        IPV6Enabled: false
        Enabled: true

  InvalidationPolicy:
    Type: AWS::IAM::Policy
    Condition: IsProd
    Properties:
      PolicyName: !Join ["-", [!Ref ProjectName, create, invalidation]]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - cloudfront:CreateInvalidation
            Resource:
              - !Join ["", ["arn:aws:cloudfront::", !Ref "AWS::AccountId", ":distribution/", !Ref CDN]]
      Groups:
        - !Ref OperatorsGroup

Outputs:
  DistributionId:
    Condition: IsProd
    Value: !Ref CDN
  WebsiteURL:
    Value: !If
      - IsProd
      - !Join ["", ["https://", !GetAtt CDN.DomainName]]
      - !GetAtt WebsiteBucket.WebsiteURL